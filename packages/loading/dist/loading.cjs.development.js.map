{"version":3,"file":"loading.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import {\n\tExtractRematchDispatchersFromEffects,\n\tPlugin,\n\tModels,\n\tReducer,\n\tNamedModel,\n\tAction,\n} from '@rematch/core'\n\nexport interface LoadingConfig {\n\tname?: string\n\twhitelist?: string[]\n\tblacklist?: string[]\n\tasNumber?: boolean\n}\n\ninterface LoadingState<\n\tTModels extends Models<TModels>,\n\tAsNumber extends boolean = false\n> {\n\tglobal: AsNumber extends true ? number : boolean\n\tmodels: {\n\t\t[modelName in keyof TModels]: AsNumber extends true ? number : boolean\n\t}\n\teffects: {\n\t\t[modelName in keyof TModels]: {\n\t\t\t[effectName in keyof ExtractRematchDispatchersFromEffects<\n\t\t\t\tTModels[modelName]['effects'],\n\t\t\t\tTModels\n\t\t\t>]: AsNumber extends true ? number : boolean\n\t\t}\n\t}\n}\n\ninterface InitialState<AsNumber extends boolean = false> {\n\tglobal: AsNumber extends true ? number : boolean\n\tmodels: {\n\t\t[modelName: string]: AsNumber extends true ? number : boolean\n\t}\n\teffects: {\n\t\t[modelName: string]: {\n\t\t\t[effectName: string]: AsNumber extends true ? number : boolean\n\t\t}\n\t}\n}\n\ntype Converter = ((cnt: number) => number) | ((cnt: number) => boolean)\n\ninterface LoadingModel<\n\tTModels extends Models<TModels>,\n\tAsNumber extends boolean = false\n> extends NamedModel<TModels, LoadingState<TModels, AsNumber>> {\n\treducers: {\n\t\thide: Reducer<LoadingState<TModels, AsNumber>>\n\t\tshow: Reducer<LoadingState<TModels, AsNumber>>\n\t}\n}\n\nexport interface ExtraModelsFromLoading<TModels extends Models<TModels>>\n\textends Models<TModels> {\n\tloading: LoadingModel<TModels>\n}\n\nconst createLoadingAction = <\n\tTModels extends Models<TModels>,\n\tAsNumber extends boolean = false\n>(\n\tconverter: Converter,\n\ti: number,\n\tcntState: InitialState<true>\n): Reducer<LoadingState<TModels, AsNumber>> => (\n\tstate,\n\tpayload: Action<{ name: string; action: string }>['payload']\n): LoadingState<TModels, boolean> => {\n\tconst { name, action } = payload || { name: '', action: '' }\n\n\tcntState.global += i\n\tcntState.models[name] += i\n\tcntState.effects[name][action] += i\n\n\treturn {\n\t\t...state,\n\t\tglobal: converter(cntState.global),\n\t\tmodels: {\n\t\t\t...state.models,\n\t\t\t[name]: converter(cntState.models[name]),\n\t\t},\n\t\teffects: {\n\t\t\t...state.effects,\n\t\t\t[name]: {\n\t\t\t\t...state.effects[name],\n\t\t\t\t[action]: converter(cntState.effects[name][action]),\n\t\t\t},\n\t\t},\n\t}\n}\n\nconst validateConfig = (config: LoadingConfig): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tif (config.name && typeof config.name !== 'string') {\n\t\t\tthrow new Error('loading plugin config name must be a string')\n\t\t}\n\t\tif (config.asNumber && typeof config.asNumber !== 'boolean') {\n\t\t\tthrow new Error('loading plugin config asNumber must be a boolean')\n\t\t}\n\t\tif (config.whitelist && !Array.isArray(config.whitelist)) {\n\t\t\tthrow new Error(\n\t\t\t\t'loading plugin config whitelist must be an array of strings'\n\t\t\t)\n\t\t}\n\t\tif (config.blacklist && !Array.isArray(config.blacklist)) {\n\t\t\tthrow new Error(\n\t\t\t\t'loading plugin config blacklist must be an array of strings'\n\t\t\t)\n\t\t}\n\t\tif (config.whitelist && config.blacklist) {\n\t\t\tthrow new Error(\n\t\t\t\t'loading plugin config cannot have both a whitelist & a blacklist'\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels> = {}\n>(\n\tconfig: LoadingConfig = {}\n): Plugin<TModels, TExtraModels, ExtraModelsFromLoading<TModels>> => {\n\tvalidateConfig(config)\n\n\tconst loadingModelName = config.name || 'loading'\n\n\tconst cntState: InitialState<true> = {\n\t\tglobal: 0,\n\t\tmodels: {},\n\t\teffects: {},\n\t}\n\n\tconst isAsNumber = config.asNumber === true\n\n\tconst loadingInitialState: InitialState<typeof isAsNumber> = {\n\t\tglobal: 0,\n\t\tmodels: {},\n\t\teffects: {},\n\t}\n\n\tconst converter = isAsNumber\n\t\t? (cnt: number): number => cnt\n\t\t: (cnt: number): boolean => cnt > 0\n\n\tconst loading: LoadingModel<TModels, typeof isAsNumber> = {\n\t\tname: loadingModelName,\n\t\treducers: {\n\t\t\thide: createLoadingAction(converter, -1, cntState),\n\t\t\tshow: createLoadingAction(converter, 1, cntState),\n\t\t},\n\t\tstate: loadingInitialState as LoadingState<TModels, typeof isAsNumber>,\n\t}\n\n\tconst initialLoadingValue = converter(0)\n\n\tloadingInitialState.global = initialLoadingValue\n\n\treturn {\n\t\tconfig: {\n\t\t\tmodels: {\n\t\t\t\tloading,\n\t\t\t},\n\t\t},\n\t\tonModel({ name }, rematch): void {\n\t\t\t// do not run dispatch on \"loading\" model\n\t\t\tif (name === loadingModelName) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcntState.models[name] = 0\n\t\t\tcntState.effects[name] = {}\n\n\t\t\tloadingInitialState.models[name] = initialLoadingValue\n\t\t\tloadingInitialState.effects[name] = {}\n\n\t\t\tconst modelActions = rematch.dispatch[name]\n\n\t\t\t// map over effects within models\n\t\t\tObject.keys(modelActions).forEach((action: string) => {\n\t\t\t\tif (!rematch.dispatch[name][action].isEffect) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tcntState.effects[name][action] = 0\n\t\t\t\tloadingInitialState.effects[name][action] = initialLoadingValue\n\n\t\t\t\tconst actionType = `${name}/${action}`\n\n\t\t\t\t// ignore items not in whitelist\n\t\t\t\tif (config.whitelist && !config.whitelist.includes(actionType)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// ignore items in blacklist\n\t\t\t\tif (config.blacklist && config.blacklist.includes(actionType)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// copy orig effect pointer\n\t\t\t\tconst origEffect = rematch.dispatch[name][action]\n\n\t\t\t\t// create function with pre & post loading calls\n\t\t\t\tconst effectWrapper = (...props: any): any => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// show loading\n\t\t\t\t\t\trematch.dispatch[loadingModelName].show({ name, action })\n\t\t\t\t\t\t// dispatch the original action\n\t\t\t\t\t\tconst effectResult = origEffect(...props)\n\n\t\t\t\t\t\t// check if result is a promise\n\t\t\t\t\t\tif (effectResult?.then) {\n\t\t\t\t\t\t\t// hide loading when promise finishes either with success or error\n\t\t\t\t\t\t\teffectResult\n\t\t\t\t\t\t\t\t.then((r: any) => {\n\t\t\t\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({ name, action })\n\t\t\t\t\t\t\t\t\treturn r\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch((err: any) => {\n\t\t\t\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({ name, action })\n\t\t\t\t\t\t\t\t\tthrow err\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// original action doesn't return a promise so there's nothing to wait for\n\t\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({ name, action })\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// return the original result of this reducer\n\t\t\t\t\t\treturn effectResult\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({ name, action })\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\teffectWrapper.isEffect = true\n\n\t\t\t\t// replace existing effect with new wrapper\n\t\t\t\trematch.dispatch[name][action] = effectWrapper\n\t\t\t})\n\t\t},\n\t}\n}\n"],"names":["createLoadingAction","converter","i","cntState","state","payload","name","action","global","models","effects","validateConfig","config","Error","asNumber","whitelist","Array","isArray","blacklist","loadingModelName","isAsNumber","loadingInitialState","cnt","loading","reducers","hide","show","initialLoadingValue","onModel","rematch","modelActions","dispatch","Object","keys","forEach","isEffect","actionType","includes","origEffect","effectWrapper","effectResult","then","r","err","error"],"mappings":"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"}