{"version":3,"file":"select.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import {\n\tExtractRematchStateFromModels,\n\tModel,\n\tModels,\n\tPlugin,\n\tRematchStore,\n} from '@rematch/core'\nimport { createSelector, createStructuredSelector } from 'reselect'\nimport { SelectConfig } from './types'\n\nconst makeSelect = () => {\n\t/**\n\t * Maps models to structured selector\n\t * @param  mapSelectToStructure function that gets passed `selectors` and returns an object\n\t * @param  structuredSelectorCreator=createStructuredSelector if you need to provide your own implementation\n\t *\n\t * @return the result of calling `structuredSelectorCreator` with the new selectors\n\t */\n\tfunction select(\n\t\tmapSelectToStructure: any,\n\t\tstructuredSelectorCreator = createStructuredSelector\n\t) {\n\t\tlet func = (state: any, props: any): any => {\n\t\t\tfunc = structuredSelectorCreator(mapSelectToStructure(select))\n\t\t\treturn func(state, props)\n\t\t}\n\n\t\treturn (state: any, props: any) => func(state, props)\n\t}\n\n\treturn select\n}\n\nconst makeFactoryGroup = () => {\n\tlet ready = false\n\tconst factories = new Set()\n\treturn {\n\t\tadd(added: any) {\n\t\t\tif (!ready) {\n\t\t\t\tadded.forEach((factory: any) => factories.add(factory))\n\t\t\t} else {\n\t\t\t\tadded.forEach((factory: any) => factory())\n\t\t\t}\n\t\t},\n\t\tfinish(factory: any) {\n\t\t\tfactories.delete(factory)\n\t\t},\n\t\tstartBuilding() {\n\t\t\tready = true\n\t\t\tfactories.forEach((factory: any) => factory())\n\t\t},\n\t}\n}\n\nconst validateConfig = <TModels extends Models<TModels>>(\n\tconfig: SelectConfig<TModels>\n): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tif (config.sliceState && typeof config.sliceState !== 'function') {\n\t\t\tthrow new Error('select plugin config sliceState must be a function')\n\t\t}\n\n\t\tif (\n\t\t\tconfig.selectorCreator &&\n\t\t\ttypeof config.selectorCreator !== 'function'\n\t\t) {\n\t\t\tthrow new Error('select plugin config selectorCreator must be a function')\n\t\t}\n\t}\n}\n\nconst validateSelector = (\n\tselectorFactories: any,\n\tselectorName: any,\n\tmodel: any\n): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tif (typeof selectorFactories?.[selectorName] !== 'function') {\n\t\t\tthrow new Error(\n\t\t\t\t`Selector (${model.name}/${selectorName}) must be a function`\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst createSelectPlugin = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels> = Record<string, any>\n>(\n\tconfig: SelectConfig<TModels> = {}\n): Plugin<TModels, TExtraModels> => {\n\tvalidateConfig(config)\n\n\tconst sliceState: SelectConfig<TModels>['sliceState'] =\n\t\tconfig.sliceState || ((state, model) => state[model.name || ''])\n\tconst selectorCreator = config.selectorCreator || createSelector\n\n\tconst slice = (model: Model<TModels>) => (\n\t\tstateOrNext: ExtractRematchStateFromModels<TModels>\n\t) => {\n\t\tif (typeof stateOrNext === 'function') {\n\t\t\treturn selectorCreator(\n\t\t\t\t(state: ExtractRematchStateFromModels<TModels>) =>\n\t\t\t\t\tsliceState(state, model),\n\t\t\t\tstateOrNext\n\t\t\t)\n\t\t}\n\t\treturn sliceState(stateOrNext, model)\n\t}\n\n\tconst hasProps = (inner: any) =>\n\t\tfunction (this: any, models: any) {\n\t\t\treturn selectorCreator(\n\t\t\t\t(props: any) => props,\n\t\t\t\t(props: any) => inner.call(this, models, props)\n\t\t\t)\n\t\t}\n\n\tconst factoryGroup = makeFactoryGroup()\n\n\tconst select = makeSelect()\n\n\treturn {\n\t\texposed: {\n\t\t\tselect,\n\t\t\t// @ts-ignore\n\t\t\tsliceState,\n\t\t\tselectorCreator,\n\t\t},\n\t\tonModel(model: Model<TModels>) {\n\t\t\t// @ts-ignore\n\t\t\tselect[model.name] = {}\n\n\t\t\tconst selectorFactories =\n\t\t\t\ttypeof model.selectors === 'function'\n\t\t\t\t\t? // @ts-ignore\n\t\t\t\t\t  model.selectors(slice(model), selectorCreator, hasProps)\n\t\t\t\t\t: model.selectors\n\n\t\t\tfactoryGroup.add(\n\t\t\t\tObject.keys(selectorFactories || {}).map((selectorName: string) => {\n\t\t\t\t\tvalidateSelector(selectorFactories, selectorName, model)\n\n\t\t\t\t\tconst factory = () => {\n\t\t\t\t\t\tfactoryGroup.finish(factory)\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdelete select[model.name][selectorName]\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tselect[model.name][selectorName] = selectorFactories[\n\t\t\t\t\t\t\tselectorName\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t].call(select[model.name], select)\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\treturn select[model.name][selectorName]\n\t\t\t\t\t}\n\n\t\t\t\t\t// Define a getter for early constructing\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tObject.defineProperty(select[model.name], selectorName, {\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\treturn factory()\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\n\t\t\t\t\treturn factory\n\t\t\t\t})\n\t\t\t)\n\t\t},\n\t\t// @ts-ignore\n\t\tonStoreCreated(store: RematchStore) {\n\t\t\tfactoryGroup.startBuilding()\n\t\t\t// @ts-ignore\n\t\t\tstore.select = select\n\t\t},\n\t}\n}\n\nexport default createSelectPlugin\nexport * from './types'\n"],"names":["makeSelect","select","mapSelectToStructure","structuredSelectorCreator","createStructuredSelector","func","state","props","makeFactoryGroup","ready","factories","Set","add","added","forEach","factory","finish","startBuilding","validateConfig","config","sliceState","Error","selectorCreator","validateSelector","selectorFactories","selectorName","model","name","createSelectPlugin","createSelector","slice","stateOrNext","hasProps","inner","models","call","factoryGroup","exposed","onModel","selectors","Object","keys","map","defineProperty","configurable","get","onStoreCreated","store"],"mappings":"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"}